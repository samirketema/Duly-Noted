#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_9BD964_DulyNoted")]
public partial class DulyDBDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAdmin(Admin instance);
  partial void UpdateAdmin(Admin instance);
  partial void DeleteAdmin(Admin instance);
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  partial void InsertBannedEmail(BannedEmail instance);
  partial void UpdateBannedEmail(BannedEmail instance);
  partial void DeleteBannedEmail(BannedEmail instance);
  partial void InsertComment(Comment instance);
  partial void UpdateComment(Comment instance);
  partial void DeleteComment(Comment instance);
  partial void InsertCourse(Course instance);
  partial void UpdateCourse(Course instance);
  partial void DeleteCourse(Course instance);
  partial void InsertPasswordRecovery(PasswordRecovery instance);
  partial void UpdatePasswordRecovery(PasswordRecovery instance);
  partial void DeletePasswordRecovery(PasswordRecovery instance);
  partial void InsertProfessor(Professor instance);
  partial void UpdateProfessor(Professor instance);
  partial void DeleteProfessor(Professor instance);
  partial void InsertSection(Section instance);
  partial void UpdateSection(Section instance);
  partial void DeleteSection(Section instance);
  partial void InsertUserActivation(UserActivation instance);
  partial void UpdateUserActivation(UserActivation instance);
  partial void DeleteUserActivation(UserActivation instance);
  partial void InsertVotingCheck(VotingCheck instance);
  partial void UpdateVotingCheck(VotingCheck instance);
  partial void DeleteVotingCheck(VotingCheck instance);
  partial void InsertNote(Note instance);
  partial void UpdateNote(Note instance);
  partial void DeleteNote(Note instance);
  #endregion
	
	public DulyDBDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dulyDBConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DulyDBDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DulyDBDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DulyDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DulyDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Admin> Admins
	{
		get
		{
			return this.GetTable<Admin>();
		}
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
	
	public System.Data.Linq.Table<BannedEmail> BannedEmails
	{
		get
		{
			return this.GetTable<BannedEmail>();
		}
	}
	
	public System.Data.Linq.Table<Comment> Comments
	{
		get
		{
			return this.GetTable<Comment>();
		}
	}
	
	public System.Data.Linq.Table<Course> Courses
	{
		get
		{
			return this.GetTable<Course>();
		}
	}
	
	public System.Data.Linq.Table<PasswordRecovery> PasswordRecoveries
	{
		get
		{
			return this.GetTable<PasswordRecovery>();
		}
	}
	
	public System.Data.Linq.Table<Professor> Professors
	{
		get
		{
			return this.GetTable<Professor>();
		}
	}
	
	public System.Data.Linq.Table<Section> Sections
	{
		get
		{
			return this.GetTable<Section>();
		}
	}
	
	public System.Data.Linq.Table<UserActivation> UserActivations
	{
		get
		{
			return this.GetTable<UserActivation>();
		}
	}
	
	public System.Data.Linq.Table<VotingCheck> VotingChecks
	{
		get
		{
			return this.GetTable<VotingCheck>();
		}
	}
	
	public System.Data.Linq.Table<Note> Notes
	{
		get
		{
			return this.GetTable<Note>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admins")]
public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _adminId;
	
	private string _password;
	
	private string _email;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnadminIdChanging(string value);
    partial void OnadminIdChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
	
	public Admin()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminId", DbType="NChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string adminId
	{
		get
		{
			return this._adminId;
		}
		set
		{
			if ((this._adminId != value))
			{
				this.OnadminIdChanging(value);
				this.SendPropertyChanging();
				this._adminId = value;
				this.SendPropertyChanged("adminId");
				this.OnadminIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(255) NOT NULL", CanBeNull=false)]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NChar(75)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _userId;
	
	private string _email;
	
	private string _password;
	
	private string _firstName;
	
	private string _lastName;
	
	private string _displayName;
	
	private System.DateTime _createdDate;
	
	private System.Nullable<System.DateTime> _lastLoginDate;
	
	private string _salt;
	
	private EntitySet<Comment> _Comments;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OndisplayNameChanging(string value);
    partial void OndisplayNameChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnlastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastLoginDateChanged();
    partial void OnsaltChanging(string value);
    partial void OnsaltChanged();
    #endregion
	
	public User()
	{
		this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int userId
	{
		get
		{
			return this._userId;
		}
		set
		{
			if ((this._userId != value))
			{
				this.OnuserIdChanging(value);
				this.SendPropertyChanging();
				this._userId = value;
				this.SendPropertyChanged("userId");
				this.OnuserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NChar(75) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(255) NOT NULL", CanBeNull=false)]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NChar(75) NOT NULL", CanBeNull=false)]
	public string firstName
	{
		get
		{
			return this._firstName;
		}
		set
		{
			if ((this._firstName != value))
			{
				this.OnfirstNameChanging(value);
				this.SendPropertyChanging();
				this._firstName = value;
				this.SendPropertyChanged("firstName");
				this.OnfirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NChar(75) NOT NULL", CanBeNull=false)]
	public string lastName
	{
		get
		{
			return this._lastName;
		}
		set
		{
			if ((this._lastName != value))
			{
				this.OnlastNameChanging(value);
				this.SendPropertyChanging();
				this._lastName = value;
				this.SendPropertyChanged("lastName");
				this.OnlastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayName", DbType="NChar(75) NOT NULL", CanBeNull=false)]
	public string displayName
	{
		get
		{
			return this._displayName;
		}
		set
		{
			if ((this._displayName != value))
			{
				this.OndisplayNameChanging(value);
				this.SendPropertyChanging();
				this._displayName = value;
				this.SendPropertyChanged("displayName");
				this.OndisplayNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
	public System.DateTime createdDate
	{
		get
		{
			return this._createdDate;
		}
		set
		{
			if ((this._createdDate != value))
			{
				this.OncreatedDateChanging(value);
				this.SendPropertyChanging();
				this._createdDate = value;
				this.SendPropertyChanged("createdDate");
				this.OncreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastLoginDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> lastLoginDate
	{
		get
		{
			return this._lastLoginDate;
		}
		set
		{
			if ((this._lastLoginDate != value))
			{
				this.OnlastLoginDateChanging(value);
				this.SendPropertyChanging();
				this._lastLoginDate = value;
				this.SendPropertyChanged("lastLoginDate");
				this.OnlastLoginDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salt", DbType="NChar(75)")]
	public string salt
	{
		get
		{
			return this._salt;
		}
		set
		{
			if ((this._salt != value))
			{
				this.OnsaltChanging(value);
				this.SendPropertyChanging();
				this._salt = value;
				this.SendPropertyChanged("salt");
				this.OnsaltChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_Comments", ThisKey="userId", OtherKey="userId")]
	public EntitySet<Comment> Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			this._Comments.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Comments(Comment entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Comments(Comment entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BannedEmails")]
public partial class BannedEmail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _email;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
	
	public BannedEmail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NChar(75) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comments")]
public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _commentId;
	
	private int _userId;
	
	private int _noteId;
	
	private System.DateTime _commentedTime;
	
	private string _comment1;
	
	private EntityRef<User> _User;
	
	private EntityRef<Note> _Note;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncommentIdChanging(int value);
    partial void OncommentIdChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnnoteIdChanging(int value);
    partial void OnnoteIdChanged();
    partial void OncommentedTimeChanging(System.DateTime value);
    partial void OncommentedTimeChanged();
    partial void Oncomment1Changing(string value);
    partial void Oncomment1Changed();
    #endregion
	
	public Comment()
	{
		this._User = default(EntityRef<User>);
		this._Note = default(EntityRef<Note>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int commentId
	{
		get
		{
			return this._commentId;
		}
		set
		{
			if ((this._commentId != value))
			{
				this.OncommentIdChanging(value);
				this.SendPropertyChanging();
				this._commentId = value;
				this.SendPropertyChanged("commentId");
				this.OncommentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
	public int userId
	{
		get
		{
			return this._userId;
		}
		set
		{
			if ((this._userId != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnuserIdChanging(value);
				this.SendPropertyChanging();
				this._userId = value;
				this.SendPropertyChanged("userId");
				this.OnuserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noteId", DbType="Int NOT NULL")]
	public int noteId
	{
		get
		{
			return this._noteId;
		}
		set
		{
			if ((this._noteId != value))
			{
				if (this._Note.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnnoteIdChanging(value);
				this.SendPropertyChanging();
				this._noteId = value;
				this.SendPropertyChanged("noteId");
				this.OnnoteIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentedTime", DbType="DateTime NOT NULL")]
	public System.DateTime commentedTime
	{
		get
		{
			return this._commentedTime;
		}
		set
		{
			if ((this._commentedTime != value))
			{
				this.OncommentedTimeChanging(value);
				this.SendPropertyChanging();
				this._commentedTime = value;
				this.SendPropertyChanged("commentedTime");
				this.OncommentedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="comment", Storage="_comment1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string comment1
	{
		get
		{
			return this._comment1;
		}
		set
		{
			if ((this._comment1 != value))
			{
				this.Oncomment1Changing(value);
				this.SendPropertyChanging();
				this._comment1 = value;
				this.SendPropertyChanged("comment1");
				this.Oncomment1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_User", ThisKey="userId", OtherKey="userId", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Comments.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Comments.Add(this);
					this._userId = value.userId;
				}
				else
				{
					this._userId = default(int);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Note_Comment", Storage="_Note", ThisKey="noteId", OtherKey="noteId", IsForeignKey=true)]
	public Note Note
	{
		get
		{
			return this._Note.Entity;
		}
		set
		{
			Note previousValue = this._Note.Entity;
			if (((previousValue != value) 
						|| (this._Note.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Note.Entity = null;
					previousValue.Comments.Remove(this);
				}
				this._Note.Entity = value;
				if ((value != null))
				{
					value.Comments.Add(this);
					this._noteId = value.noteId;
				}
				else
				{
					this._noteId = default(int);
				}
				this.SendPropertyChanged("Note");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Courses")]
public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _courseId;
	
	private string _subject;
	
	private string _courseNumber;
	
	private string _coursename;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncourseIdChanging(int value);
    partial void OncourseIdChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OncourseNumberChanging(string value);
    partial void OncourseNumberChanged();
    partial void OncoursenameChanging(string value);
    partial void OncoursenameChanged();
    #endregion
	
	public Course()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int courseId
	{
		get
		{
			return this._courseId;
		}
		set
		{
			if ((this._courseId != value))
			{
				this.OncourseIdChanging(value);
				this.SendPropertyChanging();
				this._courseId = value;
				this.SendPropertyChanged("courseId");
				this.OncourseIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NChar(3) NOT NULL", CanBeNull=false)]
	public string subject
	{
		get
		{
			return this._subject;
		}
		set
		{
			if ((this._subject != value))
			{
				this.OnsubjectChanging(value);
				this.SendPropertyChanging();
				this._subject = value;
				this.SendPropertyChanged("subject");
				this.OnsubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseNumber", DbType="NChar(5) NOT NULL", CanBeNull=false)]
	public string courseNumber
	{
		get
		{
			return this._courseNumber;
		}
		set
		{
			if ((this._courseNumber != value))
			{
				this.OncourseNumberChanging(value);
				this.SendPropertyChanging();
				this._courseNumber = value;
				this.SendPropertyChanged("courseNumber");
				this.OncourseNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coursename", DbType="NChar(75) NOT NULL", CanBeNull=false)]
	public string coursename
	{
		get
		{
			return this._coursename;
		}
		set
		{
			if ((this._coursename != value))
			{
				this.OncoursenameChanging(value);
				this.SendPropertyChanging();
				this._coursename = value;
				this.SendPropertyChanged("coursename");
				this.OncoursenameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PasswordRecoveries")]
public partial class PasswordRecovery : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _userId;
	
	private string _validCode;
	
	private string _email;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnvalidCodeChanging(string value);
    partial void OnvalidCodeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
	
	public PasswordRecovery()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int userId
	{
		get
		{
			return this._userId;
		}
		set
		{
			if ((this._userId != value))
			{
				this.OnuserIdChanging(value);
				this.SendPropertyChanging();
				this._userId = value;
				this.SendPropertyChanged("userId");
				this.OnuserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_validCode", DbType="NChar(50) NOT NULL", CanBeNull=false)]
	public string validCode
	{
		get
		{
			return this._validCode;
		}
		set
		{
			if ((this._validCode != value))
			{
				this.OnvalidCodeChanging(value);
				this.SendPropertyChanging();
				this._validCode = value;
				this.SendPropertyChanged("validCode");
				this.OnvalidCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NChar(75) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Professors")]
public partial class Professor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _email;
	
	private string _firstName;
	
	private string _lastName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    #endregion
	
	public Professor()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(75) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
	public string firstName
	{
		get
		{
			return this._firstName;
		}
		set
		{
			if ((this._firstName != value))
			{
				this.OnfirstNameChanging(value);
				this.SendPropertyChanging();
				this._firstName = value;
				this.SendPropertyChanged("firstName");
				this.OnfirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
	public string lastName
	{
		get
		{
			return this._lastName;
		}
		set
		{
			if ((this._lastName != value))
			{
				this.OnlastNameChanging(value);
				this.SendPropertyChanging();
				this._lastName = value;
				this.SendPropertyChanged("lastName");
				this.OnlastNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sections")]
public partial class Section : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _sId;
	
	private int _courseId;
	
	private string _sectionNumber;
	
	private string _professorEmail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsIdChanging(int value);
    partial void OnsIdChanged();
    partial void OncourseIdChanging(int value);
    partial void OncourseIdChanged();
    partial void OnsectionNumberChanging(string value);
    partial void OnsectionNumberChanged();
    partial void OnprofessorEmailChanging(string value);
    partial void OnprofessorEmailChanged();
    #endregion
	
	public Section()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int sId
	{
		get
		{
			return this._sId;
		}
		set
		{
			if ((this._sId != value))
			{
				this.OnsIdChanging(value);
				this.SendPropertyChanging();
				this._sId = value;
				this.SendPropertyChanged("sId");
				this.OnsIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courseId", DbType="Int NOT NULL")]
	public int courseId
	{
		get
		{
			return this._courseId;
		}
		set
		{
			if ((this._courseId != value))
			{
				this.OncourseIdChanging(value);
				this.SendPropertyChanging();
				this._courseId = value;
				this.SendPropertyChanged("courseId");
				this.OncourseIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sectionNumber", DbType="NChar(4) NOT NULL", CanBeNull=false)]
	public string sectionNumber
	{
		get
		{
			return this._sectionNumber;
		}
		set
		{
			if ((this._sectionNumber != value))
			{
				this.OnsectionNumberChanging(value);
				this.SendPropertyChanging();
				this._sectionNumber = value;
				this.SendPropertyChanged("sectionNumber");
				this.OnsectionNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_professorEmail", DbType="NVarChar(75)")]
	public string professorEmail
	{
		get
		{
			return this._professorEmail;
		}
		set
		{
			if ((this._professorEmail != value))
			{
				this.OnprofessorEmailChanging(value);
				this.SendPropertyChanging();
				this._professorEmail = value;
				this.SendPropertyChanged("professorEmail");
				this.OnprofessorEmailChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserActivations")]
public partial class UserActivation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _userId;
	
	private string _activationCode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnactivationCodeChanging(string value);
    partial void OnactivationCodeChanged();
    #endregion
	
	public UserActivation()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int userId
	{
		get
		{
			return this._userId;
		}
		set
		{
			if ((this._userId != value))
			{
				this.OnuserIdChanging(value);
				this.SendPropertyChanging();
				this._userId = value;
				this.SendPropertyChanged("userId");
				this.OnuserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activationCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string activationCode
	{
		get
		{
			return this._activationCode;
		}
		set
		{
			if ((this._activationCode != value))
			{
				this.OnactivationCodeChanging(value);
				this.SendPropertyChanging();
				this._activationCode = value;
				this.SendPropertyChanged("activationCode");
				this.OnactivationCodeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VotingCheck")]
public partial class VotingCheck : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _vId;
	
	private int _userId;
	
	private int _noteId;
	
	private bool _voted;
	
	private bool _flagged;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvIdChanging(int value);
    partial void OnvIdChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnnoteIdChanging(int value);
    partial void OnnoteIdChanged();
    partial void OnvotedChanging(bool value);
    partial void OnvotedChanged();
    partial void OnflaggedChanging(bool value);
    partial void OnflaggedChanged();
    #endregion
	
	public VotingCheck()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int vId
	{
		get
		{
			return this._vId;
		}
		set
		{
			if ((this._vId != value))
			{
				this.OnvIdChanging(value);
				this.SendPropertyChanging();
				this._vId = value;
				this.SendPropertyChanged("vId");
				this.OnvIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
	public int userId
	{
		get
		{
			return this._userId;
		}
		set
		{
			if ((this._userId != value))
			{
				this.OnuserIdChanging(value);
				this.SendPropertyChanging();
				this._userId = value;
				this.SendPropertyChanged("userId");
				this.OnuserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noteId", DbType="Int NOT NULL")]
	public int noteId
	{
		get
		{
			return this._noteId;
		}
		set
		{
			if ((this._noteId != value))
			{
				this.OnnoteIdChanging(value);
				this.SendPropertyChanging();
				this._noteId = value;
				this.SendPropertyChanged("noteId");
				this.OnnoteIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voted", DbType="Bit NOT NULL")]
	public bool voted
	{
		get
		{
			return this._voted;
		}
		set
		{
			if ((this._voted != value))
			{
				this.OnvotedChanging(value);
				this.SendPropertyChanging();
				this._voted = value;
				this.SendPropertyChanged("voted");
				this.OnvotedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flagged", DbType="Bit NOT NULL")]
	public bool flagged
	{
		get
		{
			return this._flagged;
		}
		set
		{
			if ((this._flagged != value))
			{
				this.OnflaggedChanging(value);
				this.SendPropertyChanging();
				this._flagged = value;
				this.SendPropertyChanged("flagged");
				this.OnflaggedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notes")]
public partial class Note : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _noteId;
	
	private int _sId;
	
	private int _userId;
	
	private int _numberTimesFlagged;
	
	private int _upVoteCounter;
	
	private int _downVoteCounter;
	
	private string _source;
	
	private string _title;
	
	private string _description;
	
	private string _preview;
	
	private System.Nullable<System.DateTime> _noteDate;
	
	private System.Nullable<System.DateTime> _uploadDate;
	
	private EntitySet<Comment> _Comments;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnoteIdChanging(int value);
    partial void OnnoteIdChanged();
    partial void OnsIdChanging(int value);
    partial void OnsIdChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnnumberTimesFlaggedChanging(int value);
    partial void OnnumberTimesFlaggedChanged();
    partial void OnupVoteCounterChanging(int value);
    partial void OnupVoteCounterChanged();
    partial void OndownVoteCounterChanging(int value);
    partial void OndownVoteCounterChanged();
    partial void OnsourceChanging(string value);
    partial void OnsourceChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpreviewChanging(string value);
    partial void OnpreviewChanged();
    partial void OnnoteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnnoteDateChanged();
    partial void OnuploadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnuploadDateChanged();
    #endregion
	
	public Note()
	{
		this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int noteId
	{
		get
		{
			return this._noteId;
		}
		set
		{
			if ((this._noteId != value))
			{
				this.OnnoteIdChanging(value);
				this.SendPropertyChanging();
				this._noteId = value;
				this.SendPropertyChanged("noteId");
				this.OnnoteIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sId", DbType="Int NOT NULL")]
	public int sId
	{
		get
		{
			return this._sId;
		}
		set
		{
			if ((this._sId != value))
			{
				this.OnsIdChanging(value);
				this.SendPropertyChanging();
				this._sId = value;
				this.SendPropertyChanged("sId");
				this.OnsIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
	public int userId
	{
		get
		{
			return this._userId;
		}
		set
		{
			if ((this._userId != value))
			{
				this.OnuserIdChanging(value);
				this.SendPropertyChanging();
				this._userId = value;
				this.SendPropertyChanged("userId");
				this.OnuserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberTimesFlagged", DbType="Int NOT NULL")]
	public int numberTimesFlagged
	{
		get
		{
			return this._numberTimesFlagged;
		}
		set
		{
			if ((this._numberTimesFlagged != value))
			{
				this.OnnumberTimesFlaggedChanging(value);
				this.SendPropertyChanging();
				this._numberTimesFlagged = value;
				this.SendPropertyChanged("numberTimesFlagged");
				this.OnnumberTimesFlaggedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upVoteCounter", DbType="Int NOT NULL")]
	public int upVoteCounter
	{
		get
		{
			return this._upVoteCounter;
		}
		set
		{
			if ((this._upVoteCounter != value))
			{
				this.OnupVoteCounterChanging(value);
				this.SendPropertyChanging();
				this._upVoteCounter = value;
				this.SendPropertyChanged("upVoteCounter");
				this.OnupVoteCounterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_downVoteCounter", DbType="Int NOT NULL")]
	public int downVoteCounter
	{
		get
		{
			return this._downVoteCounter;
		}
		set
		{
			if ((this._downVoteCounter != value))
			{
				this.OndownVoteCounterChanging(value);
				this.SendPropertyChanging();
				this._downVoteCounter = value;
				this.SendPropertyChanged("downVoteCounter");
				this.OndownVoteCounterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string source
	{
		get
		{
			return this._source;
		}
		set
		{
			if ((this._source != value))
			{
				this.OnsourceChanging(value);
				this.SendPropertyChanging();
				this._source = value;
				this.SendPropertyChanged("source");
				this.OnsourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
	public string description
	{
		get
		{
			return this._description;
		}
		set
		{
			if ((this._description != value))
			{
				this.OndescriptionChanging(value);
				this.SendPropertyChanging();
				this._description = value;
				this.SendPropertyChanged("description");
				this.OndescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preview", DbType="NVarChar(MAX)")]
	public string preview
	{
		get
		{
			return this._preview;
		}
		set
		{
			if ((this._preview != value))
			{
				this.OnpreviewChanging(value);
				this.SendPropertyChanging();
				this._preview = value;
				this.SendPropertyChanged("preview");
				this.OnpreviewChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noteDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> noteDate
	{
		get
		{
			return this._noteDate;
		}
		set
		{
			if ((this._noteDate != value))
			{
				this.OnnoteDateChanging(value);
				this.SendPropertyChanging();
				this._noteDate = value;
				this.SendPropertyChanged("noteDate");
				this.OnnoteDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uploadDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> uploadDate
	{
		get
		{
			return this._uploadDate;
		}
		set
		{
			if ((this._uploadDate != value))
			{
				this.OnuploadDateChanging(value);
				this.SendPropertyChanging();
				this._uploadDate = value;
				this.SendPropertyChanged("uploadDate");
				this.OnuploadDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Note_Comment", Storage="_Comments", ThisKey="noteId", OtherKey="noteId")]
	public EntitySet<Comment> Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			this._Comments.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Comments(Comment entity)
	{
		this.SendPropertyChanging();
		entity.Note = this;
	}
	
	private void detach_Comments(Comment entity)
	{
		this.SendPropertyChanging();
		entity.Note = null;
	}
}
#pragma warning restore 1591
